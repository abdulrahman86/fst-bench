# YARN
samza.yarn.package.path                             file://${hibench.home}/src/streambench/samzabench/target/streaming-bench-samza-0.1-SNAPSHOT-dist.tar.gz
samza.yarn.container.count                          12

# Metrics
samza.metrics.reporters	                            snapshot
samza.metrics.reporter.snapshot.class               org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
samza.metrics.reporter.snapshot.stream              kafka.metrics
#samza.metrics.reporter.snapshot.window.ms=10000

# Serializers
samza.serializers.registry.json.class               org.apache.samza.serializers.JsonSerdeFactory
samza.serializers.registry.metrics.class            org.apache.samza.serializers.MetricsSnapshotSerdeFactory
samza.serializers.registry.string.class             org.apache.samza.serializers.StringSerdeFactory
samza.serializers.registry.integer.class            org.apache.samza.serializers.IntegerSerdeFactory

# Systems
samza.systems.kafka.samza.factory                   org.apache.samza.system.kafka.KafkaSystemFactory
samza.systems.kafka.samza.msg.serde                 string
samza.systems.kafka.streams.metrics.samza.msg.serde metrics
samza.systems.kafka.consumer.zookeeper.connect      ${hibench.streamingbench.zookeeper.host}:2181/
samza.systems.kafka.consumer.auto.offset.reset      smallest
samza.systems.kafka.producer.bootstrap.servers      ${hibench.streamingbench.brokerList}
samza.systems.kafka.producer.metadata.broker.list   ${hibench.streamingbench.brokerList}

# Tasks
samza.task.checkpoint.factory                        org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
samza.task.checkpoint.system                         kafka

# workload stubs
samza.job.factory.class				org.apache.samza.job.yarn.YarnJobFactory
#samza.job.factory.class				org.apache.samza.job.local.ThreadJobFactory

# mapping task properties
samza_workload_conf.${samza.workload.name}.*			samza.*


